[project]
requires-python = "==3.13.*"

[tool.poetry]
name = "songlinker"
description = "Links songs"
version = "3.0.0"
authors = ["BlindfoldedSurgery <team@blindfolded.surgery>"]
license = "MIT"

[[tool.poetry.source]]
name = "internal"
url = "https://pypi.bjoernpetersen.net"
priority = "explicit"

[tool.poetry.dependencies]
python = "~3.13"
bs-config = { version = "1.1.0", extras = ["dotenv"], source = "internal" }
click = "^8.1.3"
httpx = "^0.27.0"
opentelemetry-api = "~1.28"
opentelemetry-sdk = "~1.28"
opentelemetry-exporter-otlp-proto-grpc = "~1.28"
opentelemetry-instrumentation-httpx = "*"
opentelemetry-instrumentation-logging = "*"
pydantic = "~2.10"
sentry-sdk = "^2.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "~1.13"
pytest = "^8.0.0"
pytest-mock = "^3.11.1"
pytest-recording = "^0.13.0"
ruff = "0.8.1"
vcrpy = "^6.0.0"

[build-system]
requires = ["poetry-core>=1.3.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "integration",
]

[tool.mypy]
strict = true
check_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = "tests.*"
check_untyped_defs = true
allow_untyped_defs = true
allow_incomplete_defs = true

[[tool.mypy.overrides]]
module = "vcr"
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "FURB",
    "G",
    "I001",
    "LOG",
    "PTH",
    "Q",
    "UP",
]
ignore = [
    # redundant-open-modes
    "UP015",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["songlinker"]
